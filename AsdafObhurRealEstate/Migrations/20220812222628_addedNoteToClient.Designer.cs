// <auto-generated />
using System;
using AsdafObhurRealEstate.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AsdafObhurRealEstate.Migrations
{
    [DbContext(typeof(AsdafObhurContext))]
    [Migration("20220812222628_addedNoteToClient")]
    partial class addedNoteToClient
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AsdafObhurRealEstate.Models.BaseUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilePic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            AccessFailedCount = 0,
                            AccountType = 1,
                            Code = 0,
                            ConcurrencyStamp = "cd96ef8a-d8af-4af6-bc4c-117d0191dcd4",
                            CreatedAt = new DateTime(2022, 8, 13, 0, 26, 28, 285, DateTimeKind.Local).AddTicks(8893),
                            CreatedBy = "Developer",
                            Email = "gm@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "المدير",
                            LastName = "العام",
                            LockoutEnabled = false,
                            NormalizedEmail = "GM@GMAIL.COM",
                            NormalizedUserName = "GM@GMAIL.COM",
                            PasswordHash = "ALGBZSgPdNroYdiyGcg/C+CKy5row6lf/MlkkT4/UeA9+uJnkcNtKOoPn5O0GjauUw==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "231d2cd8-2728-4f79-ba6d-fde50ff09131",
                            TwoFactorEnabled = false,
                            UserName = "gm@gmail.com"
                        },
                        new
                        {
                            Id = "b0157647-7016-41cc-9a56-3695acaa13e6",
                            AccessFailedCount = 0,
                            AccountType = 1,
                            Code = 0,
                            ConcurrencyStamp = "60b92d23-0211-42f1-bb94-aa1579cc7edc",
                            CreatedAt = new DateTime(2022, 8, 13, 0, 26, 28, 286, DateTimeKind.Local).AddTicks(7851),
                            CreatedBy = "Developer",
                            DepartmentId = "f0157647-7016-41cc-9a56-3695acaa13e6",
                            Email = "ps@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "مشرف",
                            LastName = "مشاريع",
                            LockoutEnabled = false,
                            NormalizedEmail = "PS@GMAIL.COM",
                            NormalizedUserName = "PS@GMAIL.COM",
                            PasswordHash = "ALck2xGaELlif0Ju8hB2O5lyzVgbvMBKEwCbaswJGkWMt3TMG8B4EA2eVQB3N8gwMg==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "1ab221d9-9541-4596-ab8a-a4eee7c096da",
                            TwoFactorEnabled = false,
                            UserName = "ps@gmail.com"
                        },
                        new
                        {
                            Id = "c3d0584e-fcd7-439c-8ae1-g5734664d6f4",
                            AccessFailedCount = 0,
                            AccountType = 1,
                            Code = 0,
                            ConcurrencyStamp = "041c29af-f0c7-4d57-93b5-d2545f50372c",
                            CreatedAt = new DateTime(2022, 8, 13, 0, 26, 28, 287, DateTimeKind.Local).AddTicks(5306),
                            CreatedBy = "Developer",
                            Email = "es@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "سكرتير",
                            LastName = "التنفيذي",
                            LockoutEnabled = false,
                            NormalizedEmail = "ES@GMAIL.COM",
                            NormalizedUserName = "ES@GMAIL.COM",
                            PasswordHash = "AMfuvavzAsBi7ELpdBAbmfvo6uEMQD1Og+ihunNMJBrM1V+QLc87OJuVXXUJin1cNw==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "23d7767e-a9e3-447a-bb71-cf7049cb8ba3",
                            TwoFactorEnabled = false,
                            UserName = "es@gmail.com"
                        },
                        new
                        {
                            Id = "sf8ac5ac-ee3f-4cac-988d-v45ef0eed54c",
                            AccessFailedCount = 0,
                            AccountType = 1,
                            Code = 0,
                            ConcurrencyStamp = "3204b458-e9fc-4fa8-bfe1-880bc250769f",
                            CreatedAt = new DateTime(2022, 8, 13, 0, 26, 28, 288, DateTimeKind.Local).AddTicks(3142),
                            CreatedBy = "Developer",
                            DepartmentId = "62fe29f0-c227-4a03-b2f6-z97279b2bc23",
                            Email = "p@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "شؤون",
                            LastName = "موظفين",
                            LockoutEnabled = false,
                            NormalizedEmail = "P@GMAIL.COM",
                            NormalizedUserName = "P@GMAIL.COM",
                            PasswordHash = "AGlLiVPJ3bp/uh96YVwErBsrd/2RGx4pfP6U6I/ULpX2TMugEWcBr2+PMkG65wx7Rw==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "5017b430-a43c-475d-b1fc-9bf39361b538",
                            TwoFactorEnabled = false,
                            UserName = "p@gmail.com"
                        },
                        new
                        {
                            Id = "82fe29f0-c227-4a03-b2f6-z97279b2bc23",
                            AccessFailedCount = 0,
                            AccountType = 1,
                            Code = 0,
                            ConcurrencyStamp = "024275b1-0bdf-4056-99d6-e60842a646d7",
                            CreatedAt = new DateTime(2022, 8, 13, 0, 26, 28, 289, DateTimeKind.Local).AddTicks(265),
                            CreatedBy = "Developer",
                            DepartmentId = "cf8ac5ac-ee3f-4cac-988d-v45ef0eed54c",
                            Email = "m@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "تسويق",
                            LastName = "تسويق",
                            LockoutEnabled = false,
                            NormalizedEmail = "M@GMAIL.COM",
                            NormalizedUserName = "M@GMAIL.COM",
                            PasswordHash = "AM7dhFh9v+/7X+EOXuj7hoRxC0bynm3QGNs/k/PzE4yl+F+WrSAXODBmldetWDiHCA==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "8dfb98a2-a0d5-4392-b538-4c24a8713c20",
                            TwoFactorEnabled = false,
                            UserName = "m@gmail.com"
                        },
                        new
                        {
                            Id = "k71282ed-85cf-4f7c-9e05-4b28051d04e4",
                            AccessFailedCount = 0,
                            AccountType = 1,
                            Code = 0,
                            ConcurrencyStamp = "704b957c-b371-4860-9474-c077a5f3a748",
                            CreatedAt = new DateTime(2022, 8, 13, 0, 26, 28, 289, DateTimeKind.Local).AddTicks(8170),
                            CreatedBy = "Developer",
                            DepartmentId = "h3d0584e-fcd7-439c-8ae1-g5734664d6f4",
                            Email = "pMonitor@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "مراقب",
                            LastName = "مشاريع",
                            LockoutEnabled = false,
                            NormalizedEmail = "PMONITOR@GMAIL.COM",
                            NormalizedUserName = "PMONITOR@GMAIL.COM",
                            PasswordHash = "AKkbRy37rqkH0cNkf2+51ljnnnlja4W3YyMU92rGGhcfsvQ4ZIhHf4ThlrcS0U8DCA==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "661a93a0-e40f-4c00-8367-daa8cea42e26",
                            TwoFactorEnabled = false,
                            UserName = "pMonitor@gmail.com"
                        },
                        new
                        {
                            Id = "x313a786-637d-40c5-8715-543bba115487",
                            AccessFailedCount = 0,
                            AccountType = 1,
                            Code = 0,
                            ConcurrencyStamp = "92031b21-06ac-43ce-95ca-f5374d5d8f5e",
                            CreatedAt = new DateTime(2022, 8, 13, 0, 26, 28, 290, DateTimeKind.Local).AddTicks(4930),
                            CreatedBy = "Developer",
                            DepartmentId = "h3d0584e-fcd7-439c-8ae1-g5734664d6f4",
                            Email = "pe@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "مهندس",
                            LastName = "مشاريع",
                            LockoutEnabled = false,
                            NormalizedEmail = "PE@GMAIL.COM",
                            NormalizedUserName = "PE@GMAIL.COM",
                            PasswordHash = "AJDDq9cTyGjaGvDn0c4haGKoPr9og3tz3o6n73MH/A9A+dCzwPsPg/s6QfKDZCzdOA==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "6d0e7245-920e-4df8-94a6-0b29ae8ec6e3",
                            TwoFactorEnabled = false,
                            UserName = "pe@gmail.com"
                        },
                        new
                        {
                            Id = "zecb5d3d-a7f3-4751-8ae5-724e07889bd6",
                            AccessFailedCount = 0,
                            AccountType = 1,
                            Code = 0,
                            ConcurrencyStamp = "5a83ce9e-ba6a-4efd-97af-d226d9238bb4",
                            CreatedAt = new DateTime(2022, 8, 13, 0, 26, 28, 291, DateTimeKind.Local).AddTicks(2689),
                            CreatedBy = "Developer",
                            DepartmentId = "62fe29f0-c227-4a03-b2f6-z97279b2bc23",
                            Email = "f@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "المالية",
                            LastName = "مالية",
                            LockoutEnabled = false,
                            NormalizedEmail = "F@GMAIL.COM",
                            NormalizedUserName = "F@GMAIL.COM",
                            PasswordHash = "AOcRbjf1cKGk8eeqaKMS6tmFLw0g14ifPgY6stktI70VpzfrYG1VJ+t5kaGSn1CVxg==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4b40ed3c-483f-4ec8-81e8-2476290d77dc",
                            TwoFactorEnabled = false,
                            UserName = "f@gmail.com"
                        });
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Client", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BillsFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientStatus")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BaseUserId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Department", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = "2bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            CreatedAt = new DateTime(2022, 8, 13, 0, 26, 28, 285, DateTimeKind.Local).AddTicks(8857),
                            CreatedBy = "Developer",
                            ModifiedBy = "Developer",
                            Name = "الديكور",
                            UpdatedAt = new DateTime(2022, 8, 13, 0, 26, 28, 285, DateTimeKind.Local).AddTicks(8858)
                        },
                        new
                        {
                            Id = "f0157647-7016-41cc-9a56-3695acaa13e6",
                            CreatedAt = new DateTime(2022, 8, 13, 0, 26, 28, 285, DateTimeKind.Local).AddTicks(8860),
                            CreatedBy = "Developer",
                            ModifiedBy = "Developer",
                            Name = "العقار",
                            UpdatedAt = new DateTime(2022, 8, 13, 0, 26, 28, 285, DateTimeKind.Local).AddTicks(8861)
                        },
                        new
                        {
                            Id = "h3d0584e-fcd7-439c-8ae1-g5734664d6f4",
                            CreatedAt = new DateTime(2022, 8, 13, 0, 26, 28, 285, DateTimeKind.Local).AddTicks(8862),
                            CreatedBy = "Developer",
                            ModifiedBy = "Developer",
                            Name = "المقاولات",
                            UpdatedAt = new DateTime(2022, 8, 13, 0, 26, 28, 285, DateTimeKind.Local).AddTicks(8863)
                        },
                        new
                        {
                            Id = "cf8ac5ac-ee3f-4cac-988d-v45ef0eed54c",
                            CreatedAt = new DateTime(2022, 8, 13, 0, 26, 28, 285, DateTimeKind.Local).AddTicks(8864),
                            CreatedBy = "Developer",
                            ModifiedBy = "Developer",
                            Name = "الأعلام و التسويق",
                            UpdatedAt = new DateTime(2022, 8, 13, 0, 26, 28, 285, DateTimeKind.Local).AddTicks(8864)
                        },
                        new
                        {
                            Id = "62fe29f0-c227-4a03-b2f6-z97279b2bc23",
                            CreatedAt = new DateTime(2022, 8, 13, 0, 26, 28, 285, DateTimeKind.Local).AddTicks(8866),
                            CreatedBy = "Developer",
                            ModifiedBy = "Developer",
                            Name = "المالية",
                            UpdatedAt = new DateTime(2022, 8, 13, 0, 26, 28, 285, DateTimeKind.Local).AddTicks(8866)
                        });
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Multimedia", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Multimedias");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "7bf40edf-af65-4d9e-8e6d-8f40d683cc3e",
                            ConcurrencyStamp = "90d14d90-7404-48e1-a5b4-6d7bd7818120",
                            Name = "GeneralManager",
                            NormalizedName = "GENERALMANAGER"
                        },
                        new
                        {
                            Id = "a0157647-7016-41cc-9a56-8695acaa13e6",
                            ConcurrencyStamp = "258d7654-f605-4621-a38c-ec474381cae2",
                            Name = "ProjectSupervisor",
                            NormalizedName = "PROJECTSUPERVISOR"
                        },
                        new
                        {
                            Id = "d3d0584e-fcd7-439c-8ae1-f5734664d6f4",
                            ConcurrencyStamp = "f2fd3b7a-cf72-4ba4-aa64-e79ac85a58a2",
                            Name = "ExecutiveSecretary",
                            NormalizedName = "EXECUTIVESECRETARY"
                        },
                        new
                        {
                            Id = "cf8ac5ac-ee3f-4cac-988d-f45ef0eed54c",
                            ConcurrencyStamp = "ea291647-56f1-4725-b10a-5d96abc7792d",
                            Name = "Personnel",
                            NormalizedName = "PERSONNEL"
                        },
                        new
                        {
                            Id = "42fe29f0-c227-4a03-b2f6-c97279b2bc23",
                            ConcurrencyStamp = "36c2c10d-cd0c-4a5c-a0a0-490565cdea4b",
                            Name = "Marketing",
                            NormalizedName = "MARKETING"
                        },
                        new
                        {
                            Id = "b71282ed-85cf-4f7c-9e05-9b28051d04e4",
                            ConcurrencyStamp = "132b5192-4921-4770-998f-6cfab5df9e37",
                            Name = "ProjectMonitor",
                            NormalizedName = "PROJECTMONITOR"
                        },
                        new
                        {
                            Id = "e313a786-637d-40c5-8715-443bba115487",
                            ConcurrencyStamp = "f197b71b-c5e3-4bf1-9b7c-7eef9c2ef943",
                            Name = "ProjectsEngineer",
                            NormalizedName = "PROJECTSENGINEER"
                        },
                        new
                        {
                            Id = "6ecb5d3d-a7f3-4751-8ae5-524e07889bd6",
                            ConcurrencyStamp = "a0214b0a-e138-451c-872f-b59081c605d3",
                            Name = "Financial",
                            NormalizedName = "FINANCIAL"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            RoleId = "7bf40edf-af65-4d9e-8e6d-8f40d683cc3e"
                        },
                        new
                        {
                            UserId = "b0157647-7016-41cc-9a56-3695acaa13e6",
                            RoleId = "a0157647-7016-41cc-9a56-8695acaa13e6"
                        },
                        new
                        {
                            UserId = "c3d0584e-fcd7-439c-8ae1-g5734664d6f4",
                            RoleId = "d3d0584e-fcd7-439c-8ae1-f5734664d6f4"
                        },
                        new
                        {
                            UserId = "sf8ac5ac-ee3f-4cac-988d-v45ef0eed54c",
                            RoleId = "cf8ac5ac-ee3f-4cac-988d-f45ef0eed54c"
                        },
                        new
                        {
                            UserId = "82fe29f0-c227-4a03-b2f6-z97279b2bc23",
                            RoleId = "42fe29f0-c227-4a03-b2f6-c97279b2bc23"
                        },
                        new
                        {
                            UserId = "k71282ed-85cf-4f7c-9e05-4b28051d04e4",
                            RoleId = "b71282ed-85cf-4f7c-9e05-9b28051d04e4"
                        },
                        new
                        {
                            UserId = "x313a786-637d-40c5-8715-543bba115487",
                            RoleId = "e313a786-637d-40c5-8715-443bba115487"
                        },
                        new
                        {
                            UserId = "zecb5d3d-a7f3-4751-8ae5-724e07889bd6",
                            RoleId = "6ecb5d3d-a7f3-4751-8ae5-524e07889bd6"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.BaseUser", b =>
                {
                    b.HasOne("AsdafObhurRealEstate.Models.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Client", b =>
                {
                    b.HasOne("AsdafObhurRealEstate.Models.BaseUser", "BaseUser")
                        .WithMany()
                        .HasForeignKey("BaseUserId");

                    b.HasOne("AsdafObhurRealEstate.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.Navigation("BaseUser");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Multimedia", b =>
                {
                    b.HasOne("AsdafObhurRealEstate.Models.Client", "Client")
                        .WithMany("Multimedias")
                        .HasForeignKey("ClientId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AsdafObhurRealEstate.Models.BaseUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AsdafObhurRealEstate.Models.BaseUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AsdafObhurRealEstate.Models.BaseUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AsdafObhurRealEstate.Models.BaseUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Client", b =>
                {
                    b.Navigation("Multimedias");
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Department", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
