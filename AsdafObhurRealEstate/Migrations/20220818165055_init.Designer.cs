// <auto-generated />
using System;
using AsdafObhurRealEstate.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AsdafObhurRealEstate.Migrations
{
    [DbContext(typeof(AsdafObhurContext))]
    [Migration("20220818165055_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AsdafObhurRealEstate.Models.BaseUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilePic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            AccessFailedCount = 0,
                            AccountType = 1,
                            Code = 1,
                            ConcurrencyStamp = "c6ba1da2-70a0-42a5-90a4-ccc8eac36709",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Developer",
                            Email = "gm@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "المدير",
                            LastName = "العام",
                            LockoutEnabled = false,
                            NormalizedEmail = "GM@GMAIL.COM",
                            NormalizedUserName = "GM@GMAIL.COM",
                            PasswordHash = "ALKyjdyF2kVmEvimIEI4525LNnwzBWJzzAzrdQW5B7emCxhEe9r9u4nkjREkOlW1dQ==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "5356d251-7e0d-4cb3-b734-347db0a7b1a3",
                            TwoFactorEnabled = false,
                            UserName = "gm@gmail.com"
                        },
                        new
                        {
                            Id = "b0157647-7016-41cc-9a56-3695acaa13e6",
                            AccessFailedCount = 0,
                            AccountType = 1,
                            Code = 2,
                            ConcurrencyStamp = "7a8b6ec0-6bc5-4ce7-a8e4-51656fbe14bf",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Developer",
                            DepartmentId = "f0157647-7016-41cc-9a56-3695acaa13e6",
                            Email = "ps@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "مشرف",
                            LastName = "مشاريع",
                            LockoutEnabled = false,
                            NormalizedEmail = "PS@GMAIL.COM",
                            NormalizedUserName = "PS@GMAIL.COM",
                            PasswordHash = "ABOHW6f8xQ3C3Fi5ETHnLGZlsDTUntp2S+pSluRO9OuWqZRdkIiY/K4z6JypKJnCRQ==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "66166ad8-a3db-4a9b-b7be-e219bcb7a2e4",
                            TwoFactorEnabled = false,
                            UserName = "ps@gmail.com"
                        },
                        new
                        {
                            Id = "c3d0584e-fcd7-439c-8ae1-g5734664d6f4",
                            AccessFailedCount = 0,
                            AccountType = 1,
                            Code = 3,
                            ConcurrencyStamp = "3fb091f5-8114-4efa-a8f5-ddd281523fbb",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Developer",
                            Email = "es@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "سكرتير",
                            LastName = "التنفيذي",
                            LockoutEnabled = false,
                            NormalizedEmail = "ES@GMAIL.COM",
                            NormalizedUserName = "ES@GMAIL.COM",
                            PasswordHash = "ACOQKXTR6l51zbunG/0P0d5Ah8YA/FLDgixSxTCbTz3UQIklrCBd0ED0yCDuTpbzjA==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "7b7276bc-e2c9-45e4-9107-f8fa085ea671",
                            TwoFactorEnabled = false,
                            UserName = "es@gmail.com"
                        },
                        new
                        {
                            Id = "sf8ac5ac-ee3f-4cac-988d-v45ef0eed54c",
                            AccessFailedCount = 0,
                            AccountType = 1,
                            Code = 4,
                            ConcurrencyStamp = "8534a137-b420-420b-a13e-22bce6bffa23",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Developer",
                            DepartmentId = "62fe29f0-c227-4a03-b2f6-z97279b2bc23",
                            Email = "p@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "شؤون",
                            LastName = "موظفين",
                            LockoutEnabled = false,
                            NormalizedEmail = "P@GMAIL.COM",
                            NormalizedUserName = "P@GMAIL.COM",
                            PasswordHash = "AAsiEFqnjI3VWg0xi55Gs85E2Sd/H/+S6YZZ8MdPyrDn9FoBR4uzkzJwaJdiIqJFRg==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "fe3d360b-2c16-4859-9c9e-d8a16faa4bb7",
                            TwoFactorEnabled = false,
                            UserName = "p@gmail.com"
                        },
                        new
                        {
                            Id = "82fe29f0-c227-4a03-b2f6-z97279b2bc23",
                            AccessFailedCount = 0,
                            AccountType = 1,
                            Code = 5,
                            ConcurrencyStamp = "423fdc6e-26a2-4960-97ff-83d6c429d399",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Developer",
                            DepartmentId = "cf8ac5ac-ee3f-4cac-988d-v45ef0eed54c",
                            Email = "m@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "تسويق",
                            LastName = "تسويق",
                            LockoutEnabled = false,
                            NormalizedEmail = "M@GMAIL.COM",
                            NormalizedUserName = "M@GMAIL.COM",
                            PasswordHash = "AOeqJgTvAb/L9VGFOJ7bV6Y20v+KG8x85yftLBVujXBzaJTO14FgS9LJfbo1w+kJkA==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "22387486-81d1-4b11-ad5b-e32c7a847397",
                            TwoFactorEnabled = false,
                            UserName = "m@gmail.com"
                        },
                        new
                        {
                            Id = "k71282ed-85cf-4f7c-9e05-4b28051d04e4",
                            AccessFailedCount = 0,
                            AccountType = 1,
                            Code = 6,
                            ConcurrencyStamp = "38fb86f8-2ad5-4cfe-862b-e225cf1ef7cd",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Developer",
                            DepartmentId = "h3d0584e-fcd7-439c-8ae1-g5734664d6f4",
                            Email = "pMonitor@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "مراقب",
                            LastName = "مشاريع",
                            LockoutEnabled = false,
                            NormalizedEmail = "PMONITOR@GMAIL.COM",
                            NormalizedUserName = "PMONITOR@GMAIL.COM",
                            PasswordHash = "AHxEUZM3HuwDBNxTTO8e5B9xydNCps3FJ8SlNBbSbvfNVtkVBik2yQQNUGzq+ItYBw==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "e7d73efd-6b52-4d5a-b8cf-66fa50978385",
                            TwoFactorEnabled = false,
                            UserName = "pMonitor@gmail.com"
                        },
                        new
                        {
                            Id = "x313a786-637d-40c5-8715-543bba115487",
                            AccessFailedCount = 0,
                            AccountType = 1,
                            Code = 7,
                            ConcurrencyStamp = "aa379277-610d-46ef-b433-d4abf6e93d12",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Developer",
                            DepartmentId = "h3d0584e-fcd7-439c-8ae1-g5734664d6f4",
                            Email = "pe@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "مهندس",
                            LastName = "مشاريع",
                            LockoutEnabled = false,
                            NormalizedEmail = "PE@GMAIL.COM",
                            NormalizedUserName = "PE@GMAIL.COM",
                            PasswordHash = "APfOHTK4Ye/KUNoVfgEP1ZJVDyXS2MLW7EGChlHPpJ2ZrAbIilS0H2yRF+tX1TCVTA==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "9d84773c-8a91-47b8-91bc-b0e7ac203d44",
                            TwoFactorEnabled = false,
                            UserName = "pe@gmail.com"
                        },
                        new
                        {
                            Id = "zecb5d3d-a7f3-4751-8ae5-724e07889bd6",
                            AccessFailedCount = 0,
                            AccountType = 1,
                            Code = 8,
                            ConcurrencyStamp = "fbd8e8fb-65bb-499f-9869-83fbee5e3010",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Developer",
                            DepartmentId = "62fe29f0-c227-4a03-b2f6-z97279b2bc23",
                            Email = "f@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "المالية",
                            LastName = "مالية",
                            LockoutEnabled = false,
                            NormalizedEmail = "F@GMAIL.COM",
                            NormalizedUserName = "F@GMAIL.COM",
                            PasswordHash = "ALGR/QaCNJwITDVYFMQDGw4dAuJm+QMZ/LyW0+n7wcdi6EI1oGiOcRbaF4T+6kFJ7g==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d8786704-a986-4c05-a319-91f1a12380bb",
                            TwoFactorEnabled = false,
                            UserName = "f@gmail.com"
                        });
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Client", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BillsFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientStatus")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BaseUserId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            BaseUserId = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            ClientName = "Client Ahmed",
                            ClientStatus = 2,
                            Code = 1,
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            DepartmentId = "2bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            Notes = "ملاحظات من المبرمج ",
                            PhoneNumber = "035453650",
                            UpdatedAt = new DateTime(2022, 8, 18, 18, 50, 54, 940, DateTimeKind.Local).AddTicks(2987)
                        },
                        new
                        {
                            Id = "b0157647-7016-41cc-9a56-3695acaa13e6",
                            BaseUserId = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            ClientName = "Client Ahmed2",
                            ClientStatus = 2,
                            Code = 2,
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            DepartmentId = "2bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            Notes = "2ملاحظات من المبرمج ",
                            PhoneNumber = "01122332150",
                            UpdatedAt = new DateTime(2022, 8, 18, 18, 50, 54, 940, DateTimeKind.Local).AddTicks(2993)
                        },
                        new
                        {
                            Id = "c3d0584e-fcd7-439c-8ae1-g5734664d6f4",
                            BaseUserId = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            ClientName = "Client Ahmed 3 ",
                            ClientStatus = 2,
                            Code = 3,
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            DepartmentId = "2bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            Notes = "2ملاحظات من المبرمج ",
                            PhoneNumber = "24400",
                            UpdatedAt = new DateTime(2022, 8, 18, 18, 50, 54, 940, DateTimeKind.Local).AddTicks(2996)
                        });
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Department", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = "2bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Developer",
                            ModifiedBy = "Developer",
                            Name = "الديكور",
                            UpdatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "f0157647-7016-41cc-9a56-3695acaa13e6",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Developer",
                            ModifiedBy = "Developer",
                            Name = "العقار",
                            UpdatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "h3d0584e-fcd7-439c-8ae1-g5734664d6f4",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Developer",
                            ModifiedBy = "Developer",
                            Name = "المقاولات",
                            UpdatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "cf8ac5ac-ee3f-4cac-988d-v45ef0eed54c",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Developer",
                            ModifiedBy = "Developer",
                            Name = "الأعلام و التسويق",
                            UpdatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "62fe29f0-c227-4a03-b2f6-z97279b2bc23",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Developer",
                            ModifiedBy = "Developer",
                            Name = "المالية",
                            UpdatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Multimedia", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Multimedias");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "7bf40edf-af65-4d9e-8e6d-8f40d683cc3e",
                            ConcurrencyStamp = "d0584e-fcd7-439c-8ae1-f5734664d6f",
                            Name = "GeneralManager",
                            NormalizedName = "GENERALMANAGER"
                        },
                        new
                        {
                            Id = "a0157647-7016-41cc-9a56-8695acaa13e6",
                            ConcurrencyStamp = "d0584e-fcd7-439c-8ae1-f5734666d6f",
                            Name = "ProjectSupervisor",
                            NormalizedName = "PROJECTSUPERVISOR"
                        },
                        new
                        {
                            Id = "d3d0584e-fcd7-439c-8ae1-f5734664d6f4",
                            ConcurrencyStamp = "d0584e-fcd7-439c-9ae1-f5734666d6f",
                            Name = "ExecutiveSecretary",
                            NormalizedName = "EXECUTIVESECRETARY"
                        },
                        new
                        {
                            Id = "cf8ac5ac-ee3f-4cac-988d-f45ef0eed54c",
                            ConcurrencyStamp = "d0554e-fcd7-439c-8ae1-f5734666d6f",
                            Name = "Personnel",
                            NormalizedName = "PERSONNEL"
                        },
                        new
                        {
                            Id = "42fe29f0-c227-4a03-b2f6-c97279b2bc23",
                            ConcurrencyStamp = "d0584e-fgd7-439c-8ae1-f5734666d6f",
                            Name = "Marketing",
                            NormalizedName = "MARKETING"
                        },
                        new
                        {
                            Id = "b71282ed-85cf-4f7c-9e05-9b28051d04e4",
                            ConcurrencyStamp = "d3584e-fcd7-439c-8ae1-f5734666d6f",
                            Name = "ProjectMonitor",
                            NormalizedName = "PROJECTMONITOR"
                        },
                        new
                        {
                            Id = "e313a786-637d-40c5-8715-443bba115487",
                            ConcurrencyStamp = "s1584e-fcd7-439c-8ae1-f5734666d6f",
                            Name = "ProjectsEngineer",
                            NormalizedName = "PROJECTSENGINEER"
                        },
                        new
                        {
                            Id = "6ecb5d3d-a7f3-4751-8ae5-524e07889bd6",
                            ConcurrencyStamp = "d0584e-fcd7-439c-8ae1-f5734236d6f",
                            Name = "Financial",
                            NormalizedName = "FINANCIAL"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            RoleId = "7bf40edf-af65-4d9e-8e6d-8f40d683cc3e"
                        },
                        new
                        {
                            UserId = "b0157647-7016-41cc-9a56-3695acaa13e6",
                            RoleId = "a0157647-7016-41cc-9a56-8695acaa13e6"
                        },
                        new
                        {
                            UserId = "c3d0584e-fcd7-439c-8ae1-g5734664d6f4",
                            RoleId = "d3d0584e-fcd7-439c-8ae1-f5734664d6f4"
                        },
                        new
                        {
                            UserId = "sf8ac5ac-ee3f-4cac-988d-v45ef0eed54c",
                            RoleId = "cf8ac5ac-ee3f-4cac-988d-f45ef0eed54c"
                        },
                        new
                        {
                            UserId = "82fe29f0-c227-4a03-b2f6-z97279b2bc23",
                            RoleId = "42fe29f0-c227-4a03-b2f6-c97279b2bc23"
                        },
                        new
                        {
                            UserId = "k71282ed-85cf-4f7c-9e05-4b28051d04e4",
                            RoleId = "b71282ed-85cf-4f7c-9e05-9b28051d04e4"
                        },
                        new
                        {
                            UserId = "x313a786-637d-40c5-8715-543bba115487",
                            RoleId = "e313a786-637d-40c5-8715-443bba115487"
                        },
                        new
                        {
                            UserId = "zecb5d3d-a7f3-4751-8ae5-724e07889bd6",
                            RoleId = "6ecb5d3d-a7f3-4751-8ae5-524e07889bd6"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.BaseUser", b =>
                {
                    b.HasOne("AsdafObhurRealEstate.Models.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Client", b =>
                {
                    b.HasOne("AsdafObhurRealEstate.Models.BaseUser", "BaseUser")
                        .WithMany()
                        .HasForeignKey("BaseUserId");

                    b.HasOne("AsdafObhurRealEstate.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.Navigation("BaseUser");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Multimedia", b =>
                {
                    b.HasOne("AsdafObhurRealEstate.Models.Client", "Client")
                        .WithMany("Multimedias")
                        .HasForeignKey("ClientId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AsdafObhurRealEstate.Models.BaseUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AsdafObhurRealEstate.Models.BaseUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AsdafObhurRealEstate.Models.BaseUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AsdafObhurRealEstate.Models.BaseUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Client", b =>
                {
                    b.Navigation("Multimedias");
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Department", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
