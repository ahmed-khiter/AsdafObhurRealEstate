// <auto-generated />
using System;
using AsdafObhurRealEstate.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AsdafObhurRealEstate.Migrations
{
    [DbContext(typeof(AsdafObhurContext))]
    [Migration("20220811155533_removeCreatedById1")]
    partial class removeCreatedById1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AsdafObhurRealEstate.Models.BaseUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilePic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            AccessFailedCount = 0,
                            AccountType = 1,
                            Code = 0,
                            ConcurrencyStamp = "9205deef-f276-41f0-94ff-f0a2608ae251",
                            CreatedAt = new DateTime(2022, 8, 11, 17, 55, 33, 316, DateTimeKind.Local).AddTicks(1615),
                            CreatedBy = "Developer",
                            Email = "gm@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "المدير",
                            LastName = "العام",
                            LockoutEnabled = false,
                            NormalizedEmail = "GM@GMAIL.COM",
                            NormalizedUserName = "GM@GMAIL.COM",
                            PasswordHash = "ADz9z7+igh6Y0MXV8NaOYksI5fu5q/a2lQNfFoFvGKi9XKvTL4hpWd1n4FSGgDpe1Q==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "47b2f788-5e02-45db-8dd5-196003c67188",
                            TwoFactorEnabled = false,
                            UserName = "gm@gmail.com"
                        },
                        new
                        {
                            Id = "b0157647-7016-41cc-9a56-3695acaa13e6",
                            AccessFailedCount = 0,
                            AccountType = 1,
                            Code = 0,
                            ConcurrencyStamp = "72540d14-d54f-4301-8191-d5fed5018aa7",
                            CreatedAt = new DateTime(2022, 8, 11, 17, 55, 33, 316, DateTimeKind.Local).AddTicks(8268),
                            CreatedBy = "Developer",
                            DepartmentId = "f0157647-7016-41cc-9a56-3695acaa13e6",
                            Email = "ps@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "مشرف",
                            LastName = "مشاريع",
                            LockoutEnabled = false,
                            NormalizedEmail = "PS@GMAIL.COM",
                            NormalizedUserName = "PS@GMAIL.COM",
                            PasswordHash = "AD3Ntq1natPSwUVdawK81u3UsqYFvxSgJDxEliY59I46OezoGNeciR13S9oNQgagBQ==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "bece7918-66ff-48e4-8f31-8c2bbdaa9196",
                            TwoFactorEnabled = false,
                            UserName = "ps@gmail.com"
                        },
                        new
                        {
                            Id = "c3d0584e-fcd7-439c-8ae1-g5734664d6f4",
                            AccessFailedCount = 0,
                            AccountType = 1,
                            Code = 0,
                            ConcurrencyStamp = "4a05f31f-1c39-42d6-adb6-9426b3cf03e7",
                            CreatedAt = new DateTime(2022, 8, 11, 17, 55, 33, 317, DateTimeKind.Local).AddTicks(4808),
                            CreatedBy = "Developer",
                            Email = "es@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "سكرتير",
                            LastName = "التنفيذي",
                            LockoutEnabled = false,
                            NormalizedEmail = "ES@GMAIL.COM",
                            NormalizedUserName = "ES@GMAIL.COM",
                            PasswordHash = "APfsjIoATUR3e7O2VhVZtDHnuh5No4wZ+aUrtdyHQkAa0FjxnPqRdSMdWkwO+pbCfA==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4152d977-4061-4168-b07a-258407369ea7",
                            TwoFactorEnabled = false,
                            UserName = "es@gmail.com"
                        },
                        new
                        {
                            Id = "sf8ac5ac-ee3f-4cac-988d-v45ef0eed54c",
                            AccessFailedCount = 0,
                            AccountType = 1,
                            Code = 0,
                            ConcurrencyStamp = "708be2e5-7534-41f2-acba-e878e236e431",
                            CreatedAt = new DateTime(2022, 8, 11, 17, 55, 33, 318, DateTimeKind.Local).AddTicks(2579),
                            CreatedBy = "Developer",
                            DepartmentId = "62fe29f0-c227-4a03-b2f6-z97279b2bc23",
                            Email = "p@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "شؤون",
                            LastName = "موظفين",
                            LockoutEnabled = false,
                            NormalizedEmail = "P@GMAIL.COM",
                            NormalizedUserName = "P@GMAIL.COM",
                            PasswordHash = "AJy8vZZhoHXqTEGkwtHV/XtERu0lYBgkpdt+mVAy/gwS7X3hSS7q01BwdYwn/CFDzg==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "fa2385ed-5d4b-4614-bc3d-6845489efae2",
                            TwoFactorEnabled = false,
                            UserName = "p@gmail.com"
                        },
                        new
                        {
                            Id = "82fe29f0-c227-4a03-b2f6-z97279b2bc23",
                            AccessFailedCount = 0,
                            AccountType = 1,
                            Code = 0,
                            ConcurrencyStamp = "c2e9f631-44ba-4262-a90d-5d969ab667b9",
                            CreatedAt = new DateTime(2022, 8, 11, 17, 55, 33, 319, DateTimeKind.Local).AddTicks(1766),
                            CreatedBy = "Developer",
                            DepartmentId = "cf8ac5ac-ee3f-4cac-988d-v45ef0eed54c",
                            Email = "m@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "تسويق",
                            LastName = "تسويق",
                            LockoutEnabled = false,
                            NormalizedEmail = "M@GMAIL.COM",
                            NormalizedUserName = "M@GMAIL.COM",
                            PasswordHash = "AHgcSPmV7/Wv741kxk77O0sWQ1XWT2GfsUkDBpGUCsJPxGnhssgeC3RLSmtlShlJHw==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "33edb227-12f6-44ba-8f07-0d1130dd0d70",
                            TwoFactorEnabled = false,
                            UserName = "m@gmail.com"
                        },
                        new
                        {
                            Id = "k71282ed-85cf-4f7c-9e05-4b28051d04e4",
                            AccessFailedCount = 0,
                            AccountType = 1,
                            Code = 0,
                            ConcurrencyStamp = "9f185d23-83e3-4279-8a1a-6502d98d93e9",
                            CreatedAt = new DateTime(2022, 8, 11, 17, 55, 33, 319, DateTimeKind.Local).AddTicks(9621),
                            CreatedBy = "Developer",
                            DepartmentId = "h3d0584e-fcd7-439c-8ae1-g5734664d6f4",
                            Email = "pMonitor@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "مراقب",
                            LastName = "مشاريع",
                            LockoutEnabled = false,
                            NormalizedEmail = "PMONITOR@GMAIL.COM",
                            NormalizedUserName = "PMONITOR@GMAIL.COM",
                            PasswordHash = "AHCTWNqbvKkru7FET/cksFHdyFyfCP++/iY2VqleJeb3GLdXCXIq5Zdk0eNEFBiS8w==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "66381399-917b-418e-8473-de468c796a7f",
                            TwoFactorEnabled = false,
                            UserName = "pMonitor@gmail.com"
                        },
                        new
                        {
                            Id = "x313a786-637d-40c5-8715-543bba115487",
                            AccessFailedCount = 0,
                            AccountType = 1,
                            Code = 0,
                            ConcurrencyStamp = "44bb2416-657c-4ca3-86ae-af9d69da998c",
                            CreatedAt = new DateTime(2022, 8, 11, 17, 55, 33, 320, DateTimeKind.Local).AddTicks(8664),
                            CreatedBy = "Developer",
                            DepartmentId = "h3d0584e-fcd7-439c-8ae1-g5734664d6f4",
                            Email = "pe@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "مهندس",
                            LastName = "مشاريع",
                            LockoutEnabled = false,
                            NormalizedEmail = "PE@GMAIL.COM",
                            NormalizedUserName = "PE@GMAIL.COM",
                            PasswordHash = "ACF8bEyvrUtcAdRwqnA/IVYf2f6TKfebojG2ODPy83ApC4ewvKLgch+KB9vXi/Hy1Q==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "bdffa63b-8700-423d-b01e-925e4a5cb678",
                            TwoFactorEnabled = false,
                            UserName = "pe@gmail.com"
                        },
                        new
                        {
                            Id = "zecb5d3d-a7f3-4751-8ae5-724e07889bd6",
                            AccessFailedCount = 0,
                            AccountType = 1,
                            Code = 0,
                            ConcurrencyStamp = "eddcfba6-5e13-42d2-b600-32b0772c40c3",
                            CreatedAt = new DateTime(2022, 8, 11, 17, 55, 33, 321, DateTimeKind.Local).AddTicks(5986),
                            CreatedBy = "Developer",
                            DepartmentId = "62fe29f0-c227-4a03-b2f6-z97279b2bc23",
                            Email = "f@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "المالية",
                            LastName = "مالية",
                            LockoutEnabled = false,
                            NormalizedEmail = "F@GMAIL.COM",
                            NormalizedUserName = "F@GMAIL.COM",
                            PasswordHash = "AM4Ag77crufHYTuI/nxsqdHToZOW1QzN/OPP0hvtzuHYf+QmOkFe1HSpwvJGVxHI/A==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "edbbbfca-fdd6-4387-8818-a769ef67773b",
                            TwoFactorEnabled = false,
                            UserName = "f@gmail.com"
                        });
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Client", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BillsFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BaseUserId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Department", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = "2bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            CreatedAt = new DateTime(2022, 8, 11, 17, 55, 33, 316, DateTimeKind.Local).AddTicks(1581),
                            CreatedBy = "Developer",
                            ModifiedBy = "Developer",
                            Name = "الديكور",
                            UpdatedAt = new DateTime(2022, 8, 11, 17, 55, 33, 316, DateTimeKind.Local).AddTicks(1582)
                        },
                        new
                        {
                            Id = "f0157647-7016-41cc-9a56-3695acaa13e6",
                            CreatedAt = new DateTime(2022, 8, 11, 17, 55, 33, 316, DateTimeKind.Local).AddTicks(1583),
                            CreatedBy = "Developer",
                            ModifiedBy = "Developer",
                            Name = "العقار",
                            UpdatedAt = new DateTime(2022, 8, 11, 17, 55, 33, 316, DateTimeKind.Local).AddTicks(1584)
                        },
                        new
                        {
                            Id = "h3d0584e-fcd7-439c-8ae1-g5734664d6f4",
                            CreatedAt = new DateTime(2022, 8, 11, 17, 55, 33, 316, DateTimeKind.Local).AddTicks(1585),
                            CreatedBy = "Developer",
                            ModifiedBy = "Developer",
                            Name = "المقاولات",
                            UpdatedAt = new DateTime(2022, 8, 11, 17, 55, 33, 316, DateTimeKind.Local).AddTicks(1586)
                        },
                        new
                        {
                            Id = "cf8ac5ac-ee3f-4cac-988d-v45ef0eed54c",
                            CreatedAt = new DateTime(2022, 8, 11, 17, 55, 33, 316, DateTimeKind.Local).AddTicks(1587),
                            CreatedBy = "Developer",
                            ModifiedBy = "Developer",
                            Name = "الأعلام و التسويق",
                            UpdatedAt = new DateTime(2022, 8, 11, 17, 55, 33, 316, DateTimeKind.Local).AddTicks(1588)
                        },
                        new
                        {
                            Id = "62fe29f0-c227-4a03-b2f6-z97279b2bc23",
                            CreatedAt = new DateTime(2022, 8, 11, 17, 55, 33, 316, DateTimeKind.Local).AddTicks(1589),
                            CreatedBy = "Developer",
                            ModifiedBy = "Developer",
                            Name = "المالية",
                            UpdatedAt = new DateTime(2022, 8, 11, 17, 55, 33, 316, DateTimeKind.Local).AddTicks(1589)
                        });
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Multimedia", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Multimedias");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "7bf40edf-af65-4d9e-8e6d-8f40d683cc3e",
                            ConcurrencyStamp = "d833d824-4fa3-49a6-bf02-b7e0b07ab131",
                            Name = "GeneralManager",
                            NormalizedName = "GENERALMANAGER"
                        },
                        new
                        {
                            Id = "a0157647-7016-41cc-9a56-8695acaa13e6",
                            ConcurrencyStamp = "abf9d9c4-cf1e-4add-a704-7e7f0c42c0b2",
                            Name = "ProjectSupervisor",
                            NormalizedName = "PROJECTSUPERVISOR"
                        },
                        new
                        {
                            Id = "d3d0584e-fcd7-439c-8ae1-f5734664d6f4",
                            ConcurrencyStamp = "f0e1a8ac-c451-456d-9f8f-2d08399a01c2",
                            Name = "ExecutiveSecretary",
                            NormalizedName = "EXECUTIVESECRETARY"
                        },
                        new
                        {
                            Id = "cf8ac5ac-ee3f-4cac-988d-f45ef0eed54c",
                            ConcurrencyStamp = "a3ed5c06-a85b-41b2-9877-117787fe1467",
                            Name = "Personnel",
                            NormalizedName = "PERSONNEL"
                        },
                        new
                        {
                            Id = "42fe29f0-c227-4a03-b2f6-c97279b2bc23",
                            ConcurrencyStamp = "df72cf77-17af-45ff-b721-ef8265acc6d8",
                            Name = "Marketing",
                            NormalizedName = "MARKETING"
                        },
                        new
                        {
                            Id = "b71282ed-85cf-4f7c-9e05-9b28051d04e4",
                            ConcurrencyStamp = "e8a60933-9642-4f11-b2b9-9e152d00e76a",
                            Name = "ProjectMonitor",
                            NormalizedName = "PROJECTMONITOR"
                        },
                        new
                        {
                            Id = "e313a786-637d-40c5-8715-443bba115487",
                            ConcurrencyStamp = "f28f6590-10fb-4db0-91f1-196ad0baf8c8",
                            Name = "ProjectsEngineer",
                            NormalizedName = "PROJECTSENGINEER"
                        },
                        new
                        {
                            Id = "6ecb5d3d-a7f3-4751-8ae5-524e07889bd6",
                            ConcurrencyStamp = "d38dd93b-fc1a-457f-a10c-40832f432c12",
                            Name = "Financial",
                            NormalizedName = "FINANCIAL"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            RoleId = "7bf40edf-af65-4d9e-8e6d-8f40d683cc3e"
                        },
                        new
                        {
                            UserId = "b0157647-7016-41cc-9a56-3695acaa13e6",
                            RoleId = "a0157647-7016-41cc-9a56-8695acaa13e6"
                        },
                        new
                        {
                            UserId = "c3d0584e-fcd7-439c-8ae1-g5734664d6f4",
                            RoleId = "d3d0584e-fcd7-439c-8ae1-f5734664d6f4"
                        },
                        new
                        {
                            UserId = "sf8ac5ac-ee3f-4cac-988d-v45ef0eed54c",
                            RoleId = "cf8ac5ac-ee3f-4cac-988d-f45ef0eed54c"
                        },
                        new
                        {
                            UserId = "82fe29f0-c227-4a03-b2f6-z97279b2bc23",
                            RoleId = "42fe29f0-c227-4a03-b2f6-c97279b2bc23"
                        },
                        new
                        {
                            UserId = "k71282ed-85cf-4f7c-9e05-4b28051d04e4",
                            RoleId = "b71282ed-85cf-4f7c-9e05-9b28051d04e4"
                        },
                        new
                        {
                            UserId = "x313a786-637d-40c5-8715-543bba115487",
                            RoleId = "e313a786-637d-40c5-8715-443bba115487"
                        },
                        new
                        {
                            UserId = "zecb5d3d-a7f3-4751-8ae5-724e07889bd6",
                            RoleId = "6ecb5d3d-a7f3-4751-8ae5-524e07889bd6"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.BaseUser", b =>
                {
                    b.HasOne("AsdafObhurRealEstate.Models.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Client", b =>
                {
                    b.HasOne("AsdafObhurRealEstate.Models.BaseUser", "BaseUser")
                        .WithMany()
                        .HasForeignKey("BaseUserId");

                    b.HasOne("AsdafObhurRealEstate.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.Navigation("BaseUser");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Multimedia", b =>
                {
                    b.HasOne("AsdafObhurRealEstate.Models.Client", "Client")
                        .WithMany("Multimedias")
                        .HasForeignKey("ClientId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AsdafObhurRealEstate.Models.BaseUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AsdafObhurRealEstate.Models.BaseUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AsdafObhurRealEstate.Models.BaseUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AsdafObhurRealEstate.Models.BaseUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Client", b =>
                {
                    b.Navigation("Multimedias");
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Department", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
