// <auto-generated />
using System;
using AsdafObhurRealEstate.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AsdafObhurRealEstate.Migrations
{
    [DbContext(typeof(AsdafObhurContext))]
    [Migration("20220827131943_rolesUsers")]
    partial class rolesUsers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AsdafObhurRealEstate.Models.BaseUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<int>("AccountType")
                        .HasColumnType("integer");

                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("DepartmentId")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("ProfilePic")
                        .HasColumnType("text");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            AccessFailedCount = 0,
                            AccountType = 1,
                            Code = 1,
                            ConcurrencyStamp = "e3857c4d-9812-436a-8e9a-4f9fc1011058",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            Email = "fouad@asdaf.com",
                            EmailConfirmed = true,
                            FirstName = "فؤاد",
                            LastName = "الغامدي",
                            LockoutEnabled = false,
                            NormalizedEmail = "FOUAD@ASDAF.COM",
                            NormalizedUserName = "FOUAD@ASDAF.COM",
                            PasswordHash = "ADmI2fW0o/bK9eumP7R7bRJ1ahB7Z6K1P71l/SmEnfsatT5hFTJWbEip4aP8O3l+Mg==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "cd0e7da9-41bc-4a83-9b6a-288e05052a9e",
                            TwoFactorEnabled = false,
                            UserName = "fouad@asdaf.com"
                        },
                        new
                        {
                            Id = "b0157647-7016-41cc-9a56-3695acaa13e6",
                            AccessFailedCount = 0,
                            AccountType = 2,
                            Code = 2,
                            ConcurrencyStamp = "74d2d985-b98f-4454-b00b-38dc3b653a4f",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            DepartmentId = "f0157647-7016-41cc-9a56-3695acaa13e6",
                            Email = "mohand@asdaf.com",
                            EmailConfirmed = true,
                            FirstName = "مهند",
                            LastName = "حريري",
                            LockoutEnabled = false,
                            NormalizedEmail = "MOHAND@ASDAF.COM",
                            NormalizedUserName = "MOHAND@ASDAF.COM",
                            PasswordHash = "AMq3vpWokXql4QzJNY5HTvdmA+CDLyrZzcmCxNq2UuEXCbIcNtZbgKUMMbNIWIzsyA==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4b464725-5927-4143-977c-d43317acdd6d",
                            TwoFactorEnabled = false,
                            UserName = "mohand@asdaf.com"
                        },
                        new
                        {
                            Id = "zeaf5d3d-a7f3-4751-8ae5-724e07889bd6",
                            AccessFailedCount = 0,
                            AccountType = 2,
                            Code = 9,
                            ConcurrencyStamp = "ddbdbd4b-2845-46d8-a5d6-876bb9cd3dfe",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            DepartmentId = "f0157647-7016-41cc-9a56-3695acaa13e6",
                            Email = "sadek@asdaf.com",
                            EmailConfirmed = true,
                            FirstName = "صادق",
                            LastName = "الأبيض",
                            LockoutEnabled = false,
                            NormalizedEmail = "SADEK@ASDAF.COM",
                            NormalizedUserName = "SADEK@ASDAF.COM",
                            PasswordHash = "AMbPxp2You9jlBywHF6IC3URP+h70CwMz3UA5rOplAYaHyhNOnXSLcjTuA4ejQjlCg==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "5cb7165c-3630-4248-ba91-ddae2774951a",
                            TwoFactorEnabled = false,
                            UserName = "sadek@asdaf.com"
                        },
                        new
                        {
                            Id = "zeaf5d3d-a7f3-4751-8ae5-724e07359bd6",
                            AccessFailedCount = 0,
                            AccountType = 2,
                            Code = 10,
                            ConcurrencyStamp = "40472def-1d14-4db3-9401-e92691244c45",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            DepartmentId = "f0157647-7016-41cc-9a56-3695acaa13e6",
                            Email = "khalil@asdaf.com",
                            EmailConfirmed = true,
                            FirstName = "خليل",
                            LastName = "محمد",
                            LockoutEnabled = false,
                            NormalizedEmail = "KHALIL@ASDAF.COM",
                            NormalizedUserName = "KHALIL@ASDAF.COM",
                            PasswordHash = "ALO4nJ6Xpbm1mk7avM/EYjriOvBSK35ae7LZia99xkc1Q80JnsflQQt+yMqvcrL64w==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "f67bef1d-6336-4af3-bf97-601e351066e5",
                            TwoFactorEnabled = false,
                            UserName = "khalil@asdaf.com"
                        },
                        new
                        {
                            Id = "c3d0584e-fcd7-439c-8ae1-g5734664d6f4",
                            AccessFailedCount = 0,
                            AccountType = 3,
                            Code = 3,
                            ConcurrencyStamp = "29788d59-7c4b-4230-9c88-f79bacebb999",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            Email = "ghadeer@asdaf.com",
                            EmailConfirmed = true,
                            FirstName = "غدير",
                            LastName = "ابو داود",
                            LockoutEnabled = false,
                            NormalizedEmail = "GHADEER@ASDAF.COM",
                            NormalizedUserName = "GHADEER@ASDAF.COM",
                            PasswordHash = "AA0VFIbOq5NGr6WxchQbPqcleafGhDbi0Ndn9tfexb+B/Ri+pkD1a1dkagHjhQgfEA==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "c360324b-6b4f-4be8-af84-f48f3b7ce8bb",
                            TwoFactorEnabled = false,
                            UserName = "ghadeer@asdaf.com"
                        },
                        new
                        {
                            Id = "82fe29f0-c227-4a03-b2f6-z97279b2bc23",
                            AccessFailedCount = 0,
                            AccountType = 5,
                            Code = 5,
                            ConcurrencyStamp = "01be1180-d3a9-4344-bb9c-881b62727203",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            DepartmentId = "cf8ac5ac-ee3f-4cac-988d-v45ef0eed54c",
                            Email = "turki@asdaf.com",
                            EmailConfirmed = true,
                            FirstName = "تركي",
                            LastName = "العصلاني",
                            LockoutEnabled = false,
                            NormalizedEmail = "TURKI@ASDAF.COM",
                            NormalizedUserName = "TURKI@ASDAF.COM",
                            PasswordHash = "ACBa42boTg5i2dlED/7CEyAGu3HMij8roatZex7zXVTY845EtLy1M8m7UTEzL4vvlg==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "424dc041-65d7-4859-b42e-cffd40d7863b",
                            TwoFactorEnabled = false,
                            UserName = "turki@asdaf.com"
                        },
                        new
                        {
                            Id = "zeaf5d3d-a7f3-3081-8ae5-724e07359bd6",
                            AccessFailedCount = 0,
                            AccountType = 5,
                            Code = 11,
                            ConcurrencyStamp = "40e03862-5f56-44a3-80e1-cb84d62f7768",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            DepartmentId = "cf8ac5ac-ee3f-4cac-988d-v45ef0eed54c",
                            Email = "amal@asdaf.com",
                            EmailConfirmed = true,
                            FirstName = "أمل",
                            LastName = "الشريف",
                            LockoutEnabled = false,
                            NormalizedEmail = "AMAL@ASDAF.COM",
                            NormalizedUserName = "AMAL@ASDAF.COM",
                            PasswordHash = "AMSz7qFhusQ4BzGWv7oxXLBWCokbyHifmEfwd8o0OMwFqEi0Y+i0yb/QPLUGPpM4BQ==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "17738801-8d45-4a3e-91db-e8984ba1ad51",
                            TwoFactorEnabled = false,
                            UserName = "amal@asdaf.com"
                        },
                        new
                        {
                            Id = "x313a786-637d-40c5-8715-543bba115487",
                            AccessFailedCount = 0,
                            AccountType = 7,
                            Code = 7,
                            ConcurrencyStamp = "f4b67b75-86ba-44d7-bf72-516d8a0b5eb2",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            DepartmentId = "h3d0584e-fcd7-439c-8ae1-g5734664d6f4",
                            Email = "hossam@asdaf.com",
                            EmailConfirmed = true,
                            FirstName = "حسام",
                            LastName = "الديني",
                            LockoutEnabled = false,
                            NormalizedEmail = "HOSSAM@ASDAF.COM",
                            NormalizedUserName = "HOSSAM@ASDAF.COM",
                            PasswordHash = "AMeK1o+rsj8kmhRfQZZ5EG+CTb2EOPC3KsAJ004SeK/pqmJx7iFuyJJX704GYe7V3A==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "76751379-3972-4498-8d1d-6efc688d80c4",
                            TwoFactorEnabled = false,
                            UserName = "hossam@asdaf.com"
                        },
                        new
                        {
                            Id = "zeaf5d3d-a6b3-3081-8ae5-724e07359bd6",
                            AccessFailedCount = 0,
                            AccountType = 7,
                            Code = 12,
                            ConcurrencyStamp = "39c3ce77-a8e4-4e6a-a600-6f06dedb63e0",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            DepartmentId = "h3d0584e-fcd7-439c-8ae1-g5734664d6f4",
                            Email = "mansor@asdaf.com",
                            EmailConfirmed = true,
                            FirstName = "منصور",
                            LastName = "الأحمدي",
                            LockoutEnabled = false,
                            NormalizedEmail = "MANSOR@ASDAF.COM",
                            NormalizedUserName = "MANSOR@ASDAF.COM",
                            PasswordHash = "AJm3GL5xMO8CjcaWVuM/iTltLVyyhucVYm0SX/mirqjGWsMi5Ja0AMjm80o5IkC0CA==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4f884628-2390-4851-ba1c-05b22a0ecb4d",
                            TwoFactorEnabled = false,
                            UserName = "mansor@asdaf.com"
                        },
                        new
                        {
                            Id = "zecb5d3d-a7f3-4751-8ae5-724e07889bd6",
                            AccessFailedCount = 0,
                            AccountType = 8,
                            Code = 8,
                            ConcurrencyStamp = "27c59104-80d4-40ca-bfbf-f0cd9860cbcc",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            DepartmentId = "62fe29f0-c227-4a03-b2f6-z97279b2bc23",
                            Email = "marwa@asdaf.com",
                            EmailConfirmed = true,
                            FirstName = "مروة",
                            LastName = "عبد العاطي",
                            LockoutEnabled = false,
                            NormalizedEmail = "MARWA@ASDAF.COM",
                            NormalizedUserName = "MARWA@ASDAF.COM",
                            PasswordHash = "AFr+CN+xX6muV1Halsz4umt1+uOkeBItvMCNSD6J9w6y4Iu3YaU5nL6VyGDSjCnOzw==",
                            PhoneNumber = "01100811024",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "15cb7910-5c83-4212-8b20-388be79694d6",
                            TwoFactorEnabled = false,
                            UserName = "marwa@asdaf.com"
                        });
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Client", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("BaseUserId")
                        .HasColumnType("text");

                    b.Property<string>("BillsFile")
                        .HasColumnType("text");

                    b.Property<string>("ClientName")
                        .HasColumnType("text");

                    b.Property<int>("ClientStatus")
                        .HasColumnType("integer");

                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<int>("CodeNumber")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("CustomerNeeded")
                        .HasColumnType("text");

                    b.Property<string>("DepartmentId")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("SendFirstMessageToClient")
                        .HasColumnType("boolean");

                    b.Property<bool>("SendSecondMessageToClient")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("BaseUserId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Department", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = "2bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            ModifiedBy = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            Name = "الديكور",
                            UpdatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "f0157647-7016-41cc-9a56-3695acaa13e6",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            ModifiedBy = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            Name = "العقار",
                            UpdatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "h3d0584e-fcd7-439c-8ae1-g5734664d6f4",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            ModifiedBy = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            Name = "المقاولات",
                            UpdatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "cf8ac5ac-ee3f-4cac-988d-v45ef0eed54c",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            ModifiedBy = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            Name = "الأعلام و التسويق",
                            UpdatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "62fe29f0-c227-4a03-b2f6-z97279b2bc23",
                            CreatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            ModifiedBy = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            Name = "المالية",
                            UpdatedAt = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Multimedia", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("ClientId")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Path")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Multimedias");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "7bf40edf-af65-4d9e-8e6d-8f40d683cc3e",
                            ConcurrencyStamp = "d0584e-fcd7-439c-8ae1-f5734664d6f",
                            Name = "GeneralManager",
                            NormalizedName = "GENERALMANAGER"
                        },
                        new
                        {
                            Id = "a0157647-7016-41cc-9a56-8695acaa13e6",
                            ConcurrencyStamp = "d0584e-fcd7-439c-8ae1-f5734666d6f",
                            Name = "ProjectSupervisor",
                            NormalizedName = "PROJECTSUPERVISOR"
                        },
                        new
                        {
                            Id = "d3d0584e-fcd7-439c-8ae1-f5734664d6f4",
                            ConcurrencyStamp = "d0584e-fcd7-439c-9ae1-f5734666d6f",
                            Name = "ExecutiveSecretary",
                            NormalizedName = "EXECUTIVESECRETARY"
                        },
                        new
                        {
                            Id = "cf8ac5ac-ee3f-4cac-988d-f45ef0eed54c",
                            ConcurrencyStamp = "d0554e-fcd7-439c-8ae1-f5734666d6f",
                            Name = "Personnel",
                            NormalizedName = "PERSONNEL"
                        },
                        new
                        {
                            Id = "42fe29f0-c227-4a03-b2f6-c97279b2bc23",
                            ConcurrencyStamp = "d0584e-fgd7-439c-8ae1-f5734666d6f",
                            Name = "Marketing",
                            NormalizedName = "MARKETING"
                        },
                        new
                        {
                            Id = "b71282ed-85cf-4f7c-9e05-9b28051d04e4",
                            ConcurrencyStamp = "d3584e-fcd7-439c-8ae1-f5734666d6f",
                            Name = "ProjectMonitor",
                            NormalizedName = "PROJECTMONITOR"
                        },
                        new
                        {
                            Id = "e313a786-637d-40c5-8715-443bba115487",
                            ConcurrencyStamp = "s1584e-fcd7-439c-8ae1-f5734666d6f",
                            Name = "ProjectsEngineer",
                            NormalizedName = "PROJECTSENGINEER"
                        },
                        new
                        {
                            Id = "6ecb5d3d-a7f3-4751-8ae5-524e07889bd6",
                            ConcurrencyStamp = "d0584e-fcd7-439c-8ae1-f5734236d6f",
                            Name = "Financial",
                            NormalizedName = "FINANCIAL"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "5bf40edf-af65-4d9e-8e6d-5f40d683cc3e",
                            RoleId = "7bf40edf-af65-4d9e-8e6d-8f40d683cc3e"
                        },
                        new
                        {
                            UserId = "b0157647-7016-41cc-9a56-3695acaa13e6",
                            RoleId = "a0157647-7016-41cc-9a56-8695acaa13e6"
                        },
                        new
                        {
                            UserId = "c3d0584e-fcd7-439c-8ae1-g5734664d6f4",
                            RoleId = "d3d0584e-fcd7-439c-8ae1-f5734664d6f4"
                        },
                        new
                        {
                            UserId = "82fe29f0-c227-4a03-b2f6-z97279b2bc23",
                            RoleId = "42fe29f0-c227-4a03-b2f6-c97279b2bc23"
                        },
                        new
                        {
                            UserId = "x313a786-637d-40c5-8715-543bba115487",
                            RoleId = "e313a786-637d-40c5-8715-443bba115487"
                        },
                        new
                        {
                            UserId = "zecb5d3d-a7f3-4751-8ae5-724e07889bd6",
                            RoleId = "6ecb5d3d-a7f3-4751-8ae5-524e07889bd6"
                        },
                        new
                        {
                            UserId = "zeaf5d3d-a7f3-4751-8ae5-724e07889bd6",
                            RoleId = "a0157647-7016-41cc-9a56-8695acaa13e6"
                        },
                        new
                        {
                            UserId = "zeaf5d3d-a7f3-4751-8ae5-724e07359bd6",
                            RoleId = "a0157647-7016-41cc-9a56-8695acaa13e6"
                        },
                        new
                        {
                            UserId = "zeaf5d3d-a7f3-3081-8ae5-724e07359bd6",
                            RoleId = "42fe29f0-c227-4a03-b2f6-c97279b2bc23"
                        },
                        new
                        {
                            UserId = "zeaf5d3d-a6b3-3081-8ae5-724e07359bd6",
                            RoleId = "e313a786-637d-40c5-8715-443bba115487"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.BaseUser", b =>
                {
                    b.HasOne("AsdafObhurRealEstate.Models.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Client", b =>
                {
                    b.HasOne("AsdafObhurRealEstate.Models.BaseUser", "BaseUser")
                        .WithMany()
                        .HasForeignKey("BaseUserId");

                    b.HasOne("AsdafObhurRealEstate.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.Navigation("BaseUser");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Multimedia", b =>
                {
                    b.HasOne("AsdafObhurRealEstate.Models.Client", "Client")
                        .WithMany("Multimedias")
                        .HasForeignKey("ClientId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AsdafObhurRealEstate.Models.BaseUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AsdafObhurRealEstate.Models.BaseUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AsdafObhurRealEstate.Models.BaseUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AsdafObhurRealEstate.Models.BaseUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Client", b =>
                {
                    b.Navigation("Multimedias");
                });

            modelBuilder.Entity("AsdafObhurRealEstate.Models.Department", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
